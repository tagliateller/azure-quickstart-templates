{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json# ",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name Prefix for the Storage Account where the Virtual Machine's disks will be placed.  StorageAccounts may contain at most variables('vmsPerStorageAccount')"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForContainerServicePublicIP": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the container service.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "masterVMSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size of the node(s)"
      }
    },
    "nodeCount": {
      "type": "int",
      "metadata": {
        "description": "The count of nodes"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The network subnet"
      }
    },
    "subnetRef": {
      "type": "string",
      "metadata": {
        "description": "The network subnet reference"
      }
    },
    "nodeVMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The vm name prefix of the nodes"
      }
    },
    "osImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The publisher name to identify the OS image."
      }
    },
    "osImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer name to identify the OS image."
      }
    },
    "osImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The sku to identify the OS image."
      }
    },
    "osImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The version to identify the OS image."
      }
    },
    "customScriptLocation": {
      "type": "string",
      "metadata": {
        "description": "The github location for the shell scripts."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all linux machines with the SSH rsa public key string.  Use 'disabled' to not configure access with SSH rsa public key."
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('dnsNameForNodesPublicIP')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForNodesPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nodeVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('nodeCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(parameters('subnetPrefix'),'0/18')[0], copyIndex(parameters('masterFirstAddr')))]",
              "subnet": {
                "id": "[parameters('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('nodeVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nodeVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySet'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(parameters('masterVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('osImagePublisher')]",
            "offer": "[parameters('osImageOffer')]",
            "sku": "[parameters('osImageSKU')]",
            "version": "[parameters('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('masterVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', parameters('newStorageAccountName'), '.blob.core.windows.net/vhds/', parameters('masterVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('masterVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    }
  ]
}
